import disnake
from disnake.ext import commands
from typing import Optional
from pymongo import MongoClient


cluster = MongoClient('MONGODB LINK')
db = cluster.Vidacha
coll = db.users



class oplata_check_bariga(disnake.ui.View):
    def __init__ (self):
        super().__init__(timeout=None)
        self.value : Optional[bool] = None

    @disnake.ui.button(label='–î–∞,–æ–ø–ª–∞—Ç–∏–ª',style=disnake.ButtonStyle.green)
    async def yep_oplata(self,button:disnake.Button,interaction:disnake.Interaction):
        await interaction.send(content='–í—ã–¥–∞—é +rep –∏ +–ø–æ–∫—É–ø–∫—É')
        self.value = True
        self.stop()
    
    @disnake.ui.button(label='–ù–µ –æ–ø–ª–∞—Ç–∏–ª',style=disnake.ButtonStyle.danger)
    async def nope_oplata(self,button:disnake.Button,interaction:disnake.Interaction):
        await interaction.send(content='–í—ã–¥–∞—é –ø—Ä–µ–¥ –∏ -rep')
        self.value = False
        self.stop()


class checked_oplata(disnake.ui.View):
    def __init__ (self):
        super().__init__(timeout=None)
        self.value : Optional[bool]=None


    @disnake.ui.button(label='–û–ø–ª–∞—Ç–∏–ª',style=disnake.ButtonStyle.green)
    async def ne_oplatil_button(self,button:disnake.Button,interaction:disnake.Interaction):
        view = oplata_check_bariga()
        category = interaction.guild.get_channel(1081323038076846222)
        channel = await interaction.guild.create_text_channel(name=f'–ü–æ–∫—É–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user}  {interaction.user.id}',category=category,position=1)
        embed = disnake.Embed(
            title='–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã',
            description=f'<@839490293447524384>, –æ–ø–ª–∞—Ç–∏–ª –ª–∏ {interaction.user} —Å–≤–æ–π –∑–∞–∫–∞–∑?'
        )
        await channel.send(content='<@839490293447524384>')
        await channel.send(embed=embed,view=view)
        await interaction.send(content='‚úÖ',ephemeral=True)
        await view.wait()
        if view.value:
           embed = disnake.Embed(
               title='–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞',
               description='–í–∞—à—É –æ–ø–ª–∞—Ç—É –∑–∞–º–µ—Ç–∏–ª –ø—Ä–æ–¥–∞–≤–µ—Ü. +rep \n' 
                                       '–°–∫–æ—Ä–æ –≤–∞–º –Ω–∞–ø–∏—à—É—Ç , –æ–∂–∏–¥–∞–π—Ç–µ ‚åõ'
           )
           url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
           embed.set_thumbnail(url=url)
           await interaction.user.send(embed=embed)
           coll.update_one(
            {
            '_id':interaction.user.id
            },
            {
            '$inc':{
                'reputation':1,
                'purchase': 1
            }
            }
        )
        else:
            embed = disnake.Embed(
                title='–í—ã–¥–∞—á–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è',
                description='–≠—Ç–æ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞\n'
                                    '–¢.–∫ –≤—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª",–Ω–æ –æ–ø–ª–∞—Ç—ã –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–æ. –î—É–º–∞—é —Å—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ —Å–≤–æ–µ–º –ø–æ–≤–∏–¥–µ–Ω–∏–∏\n '
                                    '–í–∞–º –≤—ã–Ω–æ—Å–∏—Ç—Å—è –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ . –ó–∞ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—ã –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∂–µ.\n '
                                    '–° –ª—é–±–æ–≤—å—é —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ '
            )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.user.send(embed=embed)
            coll.update_one(
            {
            '_id':interaction.user.id
            },
            {
            '$inc':{
                'warns':1,
                'reputation':-1
            }
            }
        )
            
        self.value = False
        self.stop()
    
    @disnake.ui.button(label='–ù–µ –û–ø–ª–∞—Ç–∏–ª',style=disnake.ButtonStyle.danger)
    async def oplatil_button(self,button:disnake.Button,interaction:disnake.Interaction):
        await interaction.send(content='‚úÖ',ephemeral=True)
        self.value = True
        self.stop()



class confirmation(disnake.ui.View):
    def __init__ (self):
        super().__init__(timeout=20)
        self.value : Optional[bool]=None


    @disnake.ui.button(emoji='‚úÖ')
    async def yes_button(self,button:disnake.Button,interaction:disnake.Interaction):
        self.value = True
        self.stop()
    

    @disnake.ui.button(emoji='‚ùå')
    async def cansel_button(self,button:disnake.Button,interaction:disnake.Interaction):
        self.value = False
        self.stop()


class button_shop(disnake.ui.View):
    def __init__ (self):
        super().__init__(timeout=300)
        self.value: Optional[bool] = None
    

    @disnake.ui.button(label='–ú–∞–≥–∞–∑–∏–Ω',emoji='üß∫')
    async def magazine(self,button:disnake.Button,interaction:disnake.Interaction):
        view = purchases_button()
        embed = disnake.Embed(
            title='–°–µ–∫—Å —à–æ–ø "–ê–Ω–∞–ª –ú–∞–∫—Å–∏–º–∞"',
            description=f'–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã,–∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å'
        )
        await interaction.send(embed=embed,view=view)
        





class purchases_button(disnake.ui.View):
    def __init__ (self):
        super().__init__(timeout=None)
        self.value: Optional[bool] = None
    

    @disnake.ui.button(label='–ù–∏—Ç—Ä–æ 400 —Ä—É–±',style=disnake.ButtonStyle.blurple)
    async def vibrator_button(self,button:disnake.Button,interaction:disnake.Interaction,style=disnake.ButtonStyle.blurple):
        view = confirmation()
        view2 = checked_oplata()
        embed = disnake.Embed(
            title='–ù–∏—Ç—Ä–æ',
            description='–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä?'
        )
        await interaction.send(embed=embed,view=view,ephemeral=True)
        await view.wait()



        #–ø–∏—Å–∞–Ω–∏–Ω–∞ —Å –ø—Ä–∏–Ω—è—Ç–∏–µ–º
        if view is None:
            await interaction.delete_original_message(delay=1)
            await interaction.send(content='–í—ã –Ω–µ —É—Å–ø–µ–ª–∏',ephemeral=True)

        elif view.value:
            embed = disnake.Embed(
                title='–ù–∏—Ç—Ä–æ',
                description='–¢–µ–ø–µ—Ä—å –≤—ã –¥–æ–ª–∂–Ω—ã –æ–ø–ª–∞—Ç–∏—Ç—å, —É –≤–∞—Å 5 –º–∏–Ω—É—Ç. –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –æ–ø–ª–∞—Ç–µ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π Discord tag –∏ id. –•–æ—Ç—è –ø–µ—Ä–≤–æ–≥–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ\n'
                '–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –≤—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É "–Ω–µ –æ–ø–ª–∞—Ç–∏–ª" —Å–ª—É—á–∞–π–Ω–æ, –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–∫–∞–∑–∞—Ç—å —Å–ª—É—á–∞–π –æ–ø–ª–∞—Ç—ã.\n'
                '–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:\n'
                '–¢—É—Ç —Ç–∏–ø–æ –∫–∞—Ä—Ç–∞\n'
                '–ï—â–µ –∫–∞–∫–∞—è-—Ç–æ —Ö–µ—Ä–Ω—è',
                color=disnake.Color.from_rgb(0,0,255)
                )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.delete_original_message(delay=1) 
            await interaction.send(embed=embed,ephemeral=True,view=view2)
            await view2.wait()
            if view2 is None:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–í—ã –Ω–µ —É—Å–ø–µ–ª–∏',ephemeral=True)
            elif view2.value:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–ù—É –∫–∞–∫ –±—ã –¥–∞. –ò–¥–∏ –¥–∞–ª—å—à–µ —Å–º–æ—Ç—Ä–∏,—á—Ç–æ —Ö–æ—á–µ—à—å,–ø—Ä–æ–≤–µ—Ä—è–ª—å—â–∏–∫)',ephemeral=True)
                
            else:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–ü—Ä–æ–¥–∞–≤–µ—Ü –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–ª –∏ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ. –°–æ–≤–µ—Ç—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è',ephemeral=True)
   
        else:
            embed = disnake.Embed(
                title='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–∫—É–ø–∫–∏',
                description='–£–¥–∞—á–∏ —Å –≤—ã–±–æ—Ä–æ–º)',
                color=disnake.Color.from_rgb(0,0,255)
            )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.delete_original_message(delay=1)
            await interaction.send(embed=embed,ephemeral=True)
    
    @disnake.ui.button(label='–ì–æ—Ä–Ω–∏—á–Ω–∞—è –ú–∞–∫—Å–∏–º 1000 —Ä—É–±',style=disnake.ButtonStyle.blurple)
    async def putana_button(self,button:disnake.Button,interaction:disnake.Interaction,style=disnake.ButtonStyle.blurple):
        view = confirmation()
        view2 = checked_oplata()
        embed = disnake.Embed(
            title='–ì–æ—Ä–Ω–∏—á–Ω–∞—è',
            description='–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä?'
        )
        await interaction.send(embed=embed,view=view,ephemeral=True)
        await view.wait()



        #–ø–∏—Å–∞–Ω–∏–Ω–∞ —Å –ø—Ä–∏–Ω—è—Ç–∏–µ–º
        if view is None:
            await interaction.delete_original_message(delay=1)
            await interaction.send(content='–í—ã –Ω–µ —É—Å–ø–µ–ª–∏',ephemeral=True)

        elif view.value:
            embed = disnake.Embed(
                title='–ì–æ—Ä–Ω–∏—á–Ω–∞—è',
                description='–¢–µ–ø–µ—Ä—å –≤—ã –¥–æ–ª–∂–Ω—ã –æ–ø–ª–∞—Ç–∏—Ç—å, —É –≤–∞—Å 5 –º–∏–Ω—É—Ç. –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –æ–ø–ª–∞—Ç–µ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π Discord tag –∏ id. –•–æ—Ç—è –ø–µ—Ä–≤–æ–≥–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ\n'
                '–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –≤—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É "–Ω–µ –æ–ø–ª–∞—Ç–∏–ª" —Å–ª—É—á–∞–π–Ω–æ, –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–∫–∞–∑–∞—Ç—å —Å–ª—É—á–∞–π –æ–ø–ª–∞—Ç—ã.\n'
                '–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:\n'
                '–¢—É—Ç —Ç–∏–ø–æ –∫–∞—Ä—Ç–∞\n'
                '–ï—â–µ –∫–∞–∫–∞—è-—Ç–æ —Ö–µ—Ä–Ω—è',
                color=disnake.Color.from_rgb(0,0,255)
                )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.delete_original_message(delay=1) 
            await interaction.send(embed=embed,ephemeral=True,view=view2)

            #–≤–Ω—É—Ç—Ä–∏ –ø–∏—Å–∞–Ω–∏–Ω—ã –µ—â–µ –ø–∏—Å–∞–Ω–∏–Ω–∞
            await view2.wait()
            if view2 is None:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–í—ã –Ω–µ —É—Å–ø–µ–ª–∏',ephemeral=True)
            elif view2.value:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–ù—É –∫–∞–∫ –±—ã –¥–∞. –ò–¥–∏ –¥–∞–ª—å—à–µ —Å–º–æ—Ç—Ä–∏,—á—Ç–æ —Ö–æ—á–µ—à—å,–ø—Ä–æ–≤–µ—Ä—è–ª—å—â–∏–∫)',ephemeral=True)
                
            else:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–ü—Ä–æ–¥–∞–≤–µ—Ü –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–ª –∏ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ. –°–æ–≤–µ—Ç—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è',ephemeral=True)
   
        else:
            embed = disnake.Embed(
                title='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–∫—É–ø–∫–∏',
                description='–£–¥–∞—á–∏ —Å –≤—ã–±–æ—Ä–æ–º)',
                color=disnake.Color.from_rgb(0,0,255)
            )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.delete_original_message(delay=1)
            await interaction.send(embed=embed,ephemeral=True)
        
        
            
    @disnake.ui.button(label='–ò–Ω—Ç–∏–º–∫–∏ –ú–∞–∫—Å–∏–º–∞ 1669 —Ä—É–±',style=disnake.ButtonStyle.blurple)
    async def intim_button(self,button:disnake.Button,interaction:disnake.Interaction):
        view = confirmation()
        view2 = checked_oplata()
        embed = disnake.Embed(
            title='–ò–Ω—Ç–∏–º–∫–∏',
            description='–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä?'
        )
        await interaction.send(embed=embed,view=view,ephemeral=True)
        await view.wait()



        #–ø–∏—Å–∞–Ω–∏–Ω–∞ —Å –ø—Ä–∏–Ω—è—Ç–∏–µ–º
        if view is None:
            await interaction.delete_original_message(delay=1)
            await interaction.send(content='–í—ã –Ω–µ —É—Å–ø–µ–ª–∏',ephemeral=True)

        elif view.value:
            embed = disnake.Embed(
                title='–ò–Ω—Ç–∏–º–∫–∏',
                description='–¢–µ–ø–µ—Ä—å –≤—ã –¥–æ–ª–∂–Ω—ã –æ–ø–ª–∞—Ç–∏—Ç—å, —É –≤–∞—Å 5 –º–∏–Ω—É—Ç. –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –æ–ø–ª–∞—Ç–µ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π Discord tag –∏ id. –•–æ—Ç—è –ø–µ—Ä–≤–æ–≥–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ\n'
                '–í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –≤—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É "–Ω–µ –æ–ø–ª–∞—Ç–∏–ª" —Å–ª—É—á–∞–π–Ω–æ, –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–∫–∞–∑–∞—Ç—å —Å–ª—É—á–∞–π –æ–ø–ª–∞—Ç—ã.\n'
                '–ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:\n'
                '–¢—É—Ç —Ç–∏–ø–æ –∫–∞—Ä—Ç–∞\n'
                '–ï—â–µ –∫–∞–∫–∞—è-—Ç–æ —Ö–µ—Ä–Ω—è',
                color=disnake.Color.from_rgb(0,0,255)
                )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.delete_original_message(delay=1) 
            await interaction.send(embed=embed,ephemeral=True,view=view2)

            #–≤–Ω—É—Ç—Ä–∏ –ø–∏—Å–∞–Ω–∏–Ω—ã –µ—â–µ –ø–∏—Å–∞–Ω–∏–Ω–∞
            await view2.wait()
            if view2 is None:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–í—ã –Ω–µ —É—Å–ø–µ–ª–∏',ephemeral=True)
            elif view2.value:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–ù—É –∫–∞–∫ –±—ã –¥–∞. –ò–¥–∏ –¥–∞–ª—å—à–µ —Å–º–æ—Ç—Ä–∏,—á—Ç–æ —Ö–æ—á–µ—à—å,–ø—Ä–æ–≤–µ—Ä—è–ª—å—â–∏–∫)',ephemeral=True)
                
            else:
                await interaction.delete_original_message(delay=1)
                await interaction.send(content='–ü—Ä–æ–¥–∞–≤–µ—Ü –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–ª –∏ –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ. –°–æ–≤–µ—Ç—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è',ephemeral=True)
   
        else:
            embed = disnake.Embed(
                title='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–∫—É–ø–∫–∏',
                description='–£–¥–∞—á–∏ —Å –≤—ã–±–æ—Ä–æ–º)',
                color=disnake.Color.from_rgb(0,0,255)
            )
            url = 'https://cdn.discordapp.com/attachments/1059163568915890316/1081322038704214077/pngtree-shop-icon-in-neon-style-png-image_2071229.jpg'
            embed.set_thumbnail(url=url)
            await interaction.delete_original_message(delay=1)
            await interaction.send(embed=embed,ephemeral=True)
        
    
   

class shop_commands(commands.Cog):
    def __init__(self,bot):
        self.bot = bot 
        print('–ö–Ω–æ–ø–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –≥–æ—Ç–æ–≤—ã')

    @commands.slash_command(name='shop',)
    async def shop(self,ctx):
        view=button_shop()
        embed = disnake.Embed(
            title='–ú–∞–≥–∞–∑–∏–Ω —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–∏–±–ª—É–¥',
            description='–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —á—Ç–æ-—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ'
        )
        await ctx.send(embed=embed,view=view)








def setup(bot):
    bot.add_cog(shop_commands(bot))
